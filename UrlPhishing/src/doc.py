# save_feature_doc.py
import pandas as pd
import os

rows = [
    {"Feature":"is_shortener_domain",
     "Description":"Có phải domain là dịch vụ rút gọn URL (shortener) không",
     "Calculation":"Lấy registered domain (tldextract) và so sánh với danh sách SHORTENERS",
     "Type":"int (0/1)",
     "Example/Range":"bit.ly -> 1 ; example.com -> 0",
     "Output":"0 hoặc 1",
     "Notes":"Cần cập nhật danh sách SHORTENERS để theo kịp dịch vụ mới"
    },
    {"Feature":"redirect_count",
     "Description":"Số lần chuyển hướng HTTP (hop)",
     "Calculation":"Độ dài redirect_chain - 1 sau khi expand_url",
     "Type":"int >= 0",
     "Example/Range":"0,1,2,...",
     "Output":"số nguyên",
     "Notes":"Không phân biệt 3xx hay meta-refresh; meta-refresh được phát hiện bằng used_meta_refresh"
    },
    {"Feature":"final_domain_mismatch",
     "Description":"Domain cuối khác domain ban đầu?",
     "Calculation":"So sánh registered_domain(url gốc) vs registered_domain(final_url)",
     "Type":"int (0/1)",
     "Example/Range":"1 nếu khác, 0 nếu giống",
     "Output":"0 hoặc 1",
     "Notes":"Redirect tới subdomain cùng domain -> 0"
    },
    {"Feature":"final_uses_https",
     "Description":"URL cuối có HTTPS không",
     "Calculation":"Kiểm tra scheme của final_url (urlparse)",
     "Type":"int (0/1)",
     "Example/Range":"https://... -> 1",
     "Output":"0 hoặc 1",
     "Notes":"HTTPS không đảm bảo an toàn hoàn toàn"
    },
    {"Feature":"final_url_length",
     "Description":"Độ dài URL cuối cùng (sau expand)",
     "Calculation":"len(final_url)",
     "Type":"int >= 0",
     "Example/Range":"10, 200, ...",
     "Output":"số nguyên",
     "Notes":"URL dài có thể chứa token mã hóa"
    },
    {"Feature":"used_meta_refresh",
     "Description":"Có sử dụng meta-refresh để redirect không",
     "Calculation":"Tìm thẻ meta refresh trong HTML khi expand_url",
     "Type":"int (0/1)",
     "Example/Range":"0 hoặc 1",
     "Output":"0 hoặc 1",
     "Notes":"Meta-refresh có thể bị ẩn hoặc sử dụng JS thay vì HTML"
    },
    {"Feature":"url_length",
     "Description":"Độ dài URL (tính trên final URL trong code lexical_features)",
     "Calculation":"len(url) (final)",
     "Type":"int >= 0",
     "Example/Range":"20,150,...",
     "Output":"số nguyên",
     "Notes":"Dài không nhất thiết xấu nhưng là tín hiệu"
    },
    {"Feature":"url_entropy",
     "Description":"Entropy Shannon của chuỗi URL",
     "Calculation":"Shannon entropy tính trên ký tự URL",
     "Type":"float >= 0",
     "Example/Range":"0.0 - ...",
     "Output":"số thực",
     "Notes":"Entropy cao gợi ý URL ngẫu nhiên"
    },
    {"Feature":"domain_length",
     "Description":"Độ dài host/domain (không gồm port)",
     "Calculation":"len(host_wo_port)",
     "Type":"int >= 0",
     "Example/Range":"10 (paypal.com), ...",
     "Output":"số nguyên",
     "Notes":"Domain dài thường đáng ngờ"
    },
    {"Feature":"subdomain_count",
     "Description":"Số lượng subdomain",
     "Calculation":"Đếm các token subdomain từ tldextract",
     "Type":"int >= 0",
     "Example/Range":"0,1,2,...",
     "Output":"số nguyên",
     "Notes":"Nhiều subdomain có thể là dấu hiệu spoof"
    },
    {"Feature":"longest_subdomain",
     "Description":"Độ dài subdomain dài nhất",
     "Calculation":"max(len(token) for token in subdomain.split('.'))",
     "Type":"int >= 0",
     "Example/Range":"0, 15, 50 ...",
     "Output":"số nguyên",
     "Notes":"Subdomain bất thường dài -> đáng ngờ"
    },
    {"Feature":"path_length",
     "Description":"Độ dài phần path",
     "Calculation":"len(path)",
     "Type":"int >= 0",
     "Example/Range":"/a/b/c -> 6",
     "Output":"số nguyên",
     "Notes":"Path dài thường chứa token/ID"
    },
    {"Feature":"path_depth",
     "Description":"Số thư mục con trong path",
     "Calculation":"đếm non-empty segments của path.split('/')",
     "Type":"int >= 0",
     "Example/Range":"/a/b/c -> 3",
     "Output":"số nguyên",
     "Notes":"Depth cao → cấu trúc phức tạp"
    },
    {"Feature":"count_digits",
     "Description":"Tổng số chữ số trong toàn URL",
     "Calculation":"sum(c.isdigit() for c in url)",
     "Type":"int >= 0",
     "Example/Range":"0,12,34,...",
     "Output":"số nguyên",
     "Notes":"Many digits correlate with tokens/IDs"
    },
    {"Feature":"count_dots",
     "Description":"Số lượng dấu chấm '.' trong URL",
     "Calculation":"url.count('.')",
     "Type":"int >= 0",
     "Example/Range":"1,2,3...",
     "Output":"số nguyên",
     "Notes":"Nhiều dot → nhiều cấp domain/subdomain"
    },
    {"Feature":"count_hyphens",
     "Description":"Số dấu '-' trong URL",
     "Calculation":"url.count('-')",
     "Type":"int >= 0",
     "Example/Range":"0,1,2,...",
     "Output":"số nguyên",
     "Notes":"Hyphen thường xuất hiện ở domain giả mạo"
    },
    {"Feature":"uses_https",
     "Description":"URL gốc có HTTPS không",
     "Calculation":"p.scheme == 'https'",
     "Type":"int (0/1)",
     "Example/Range":"0 hoặc 1",
     "Output":"0 hoặc 1",
     "Notes":"Kết hợp với final_uses_https để hiểu liệu redirect có đổi giao thức"
    },
    {"Feature":"has_ip",
     "Description":"Domain là IP literal (IPv4/IPv6) không",
     "Calculation":"thử ipaddress.ip_address(host_wo_port)",
     "Type":"int (0/1)",
     "Example/Range":"192.0.2.1 -> 1",
     "Output":"0 hoặc 1",
     "Notes":"IP literal trong URL thường đáng ngờ"
    },
    {"Feature":"has_port",
     "Description":"URL có port explicit không",
     "Calculation":"phát hiện ':port' trong netloc (IPv6 xử lý đặc biệt)",
     "Type":"int (0/1)",
     "Example/Range":":8080 -> 1",
     "Output":"0 hoặc 1",
     "Notes":"Không phổ biến ở links công khai"
    },
    {"Feature":"query_length",
     "Description":"Độ dài phần query",
     "Calculation":"len(query)",
     "Type":"int >= 0",
     "Example/Range":"0,50,200...",
     "Output":"số nguyên",
     "Notes":"Long query chứa nhiều tham số / encoded data"
    },
    {"Feature":"query_param_count",
     "Description":"Số tham số trong query",
     "Calculation":"len(parse_qs(query))",
     "Type":"int >= 0",
     "Example/Range":"0,1,5,...",
     "Output":"số nguyên",
     "Notes":"Duplicate keys được gộp"
    },
    {"Feature":"query_has_encoded",
     "Description":"Query có chứa URL-encoded characters (%) không",
     "Calculation":"'%' in query",
     "Type":"int (0/1)",
     "Example/Range":"%2F present -> 1",
     "Output":"0 hoặc 1",
     "Notes":"Có thể dùng để ẩn payload/URLs"
    },
    {"Feature":"query_contains_email",
     "Description":"Query chứa địa chỉ email không",
     "Calculation":"regex '\\S+@\\S+' trên query",
     "Type":"int (0/1)",
     "Example/Range":"?email=a@b.com -> 1",
     "Output":"0 hoặc 1",
     "Notes":"Indicator of data-collection endpoints"
    },
    {"Feature":"evilginx_keyword_count",
     "Description":"Số từ khóa cảnh báo (login, token, session, ...)",
     "Calculation":"đếm số từ EVIL_KEYWORDS xuất hiện trong URL (lowercase)",
     "Type":"int >= 0",
     "Example/Range":"0,1,2,...",
     "Output":"số nguyên",
     "Notes":"Tập từ khóa có thể cần mở rộng / tinh chỉnh theo ngữ cảnh"
    },
    {"Feature":"dns_resolves",
     "Description":"Domain có phân giải DNS thành IP không",
     "Calculation":"socket.getaddrinfo -> success => 1, else 0",
     "Type":"int (0/1)",
     "Example/Range":"true domain ->1, NXDOMAIN ->0",
     "Output":"0 hoặc 1",
     "Notes":"Temporary DNS failures có thể gây false negatives"
    },
    {"Feature":"has_base64",
     "Description":"Có chứa chuỗi base64 dài trong path/query",
     "Calculation":"regex base64-like (12+ chars) tìm trong path+query",
     "Type":"int (0/1)",
     "Example/Range":"aHR0cDovLw== -> 1",
     "Output":"0 hoặc 1",
     "Notes":"Base64 thường dùng để mã hóa/ẩn URL"
    },
    {"Feature":"hex_token_count",
     "Description":"Số token hex dài (>=16 hex chars) xuất hiện",
     "Calculation":"regex (0x)?[0-9a-fA-F]{16,} -> count",
     "Type":"int >= 0",
     "Example/Range":"deadbeef... -> 1",
     "Output":"số nguyên",
     "Notes":"Hex tokens là IDs/tokens có thể chỉ mục độc hại"
    },
    {"Feature":"has_open_redirect_param",
     "Description":"Query có tham số redirect chứa URL không",
     "Calculation":"parse_qs -> nếu key trong OPEN_REDIRECT_KEYS và value startswith http(s) -> 1",
     "Type":"int (0/1)",
     "Example/Range":"?url=https://evil -> 1",
     "Output":"0 hoặc 1",
     "Notes":"Rất hữu ích để tìm abuse open redirect"
    },
    {"Feature":"has_non_ascii",
     "Description":"Host chứa ký tự non-ASCII (Unicode) không",
     "Calculation":"any(ord(ch) > 127 for ch in host)",
     "Type":"int (0/1)",
     "Example/Range":"Punycode/unicode domains -> 1",
     "Output":"0 hoặc 1",
     "Notes":"Homograph attacks via Unicode; cần xử lý punycode khi hiển thị"
    }
]

df = pd.DataFrame(rows)

out_file = "feature_documentation.xlsx"
# tạo thư mục nếu cần
os.makedirs(os.path.dirname(os.path.abspath(out_file)), exist_ok=True)

# ghi ra excel
df.to_excel(out_file, index=False, sheet_name="features", engine="openpyxl")

print(f"Saved feature documentation to: {os.path.abspath(out_file)}")